name: Maven Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version of the release (e.g. 1.0.0)'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

run-name: Create release v${{ inputs.version }}

permissions:
  contents: write

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Update Maven Version
        env:
          VERSION: ${{ inputs.version }}
        run: |
          sed -i "s#%VERSION%#$VERSION#g" pom.xml

      - name: Commit changes
        env:
          VERSION: ${{ inputs.version }}
        run: |
          echo "# Config"
          git config --global user.name 'RettichLP'
          git config --global user.email 'rettichlp01@gmail.com'

          echo "# Fetch all"
          git fetch --all

          echo "# Checkout release branch"
          git checkout -b release/$VERSION

          echo "# Commit and push release branch"
          git add pom.xml && git commit -m "Update version to $VERSION" && git push origin release/$VERSION

          echo "# Checkout and pull main"
          git checkout main && git pull origin main

          echo "# Merge release branch into main and push main"
          git merge release/$VERSION -X theirs && git push origin main
      - uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "rettichlp",
              "username": "${{ secrets.MAVEN_NAME }}",
              "password": "${{ secrets.MAVEN_SECRET }}"
            }]

      - name: Deploy with Maven
        run: mvn deploy -Dmaven.test.skip

      - name: Create release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.version }}
        run: |
          gh release create "$tag" \
              --target main \
              --repo="$GITHUB_REPOSITORY" \
              --title="Release $tag" \
              --generate-notes
