name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version of the release (e.g. 1.0.0)'
        required: true
        type: string

run-name: Create release v${{ inputs.version }}

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  release:

    name: ðŸŽ‰ Release DC Logging
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          user_name=$(curl -s 'https://api.github.com/users/${{ github.actor }}' | jq -r '.name')
          git config --global user.name "$user_name"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Update project version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn versions:set -DnewVersion=${{ inputs.version }}

      - name: Commit and merge develop branch to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git commit --all -m "Update version to ${{ inputs.version }}" && git push origin develop
          git fetch --all
          git checkout --track origin/main && git pull
          git merge --no-ff -m "Release ${{ inputs.version }}" develop && git push origin main

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [{
              "id": "rettichlp",
              "username": "${{ secrets.MAVEN_NAME }}",
              "password": "${{ secrets.MAVEN_SECRET }}"
            }]

      - name: Deploy with Maven
        run: mvn deploy -Dmaven.test.skip

      - name: Create release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.version }}
        run: |
          gh release create "$tag" \
              --target main \
              --repo="$GITHUB_REPOSITORY" \
              --title="Release $tag" \
              --generate-notes
